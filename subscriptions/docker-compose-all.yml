version: '3.4'

services:
  database:
    image: postgres:14.5
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: userdb
      POSTGRES_PASSWORD: passdb
      POSTGRES_DB: subscriptions
    networks:
      - meplatform-network
  wiremock:
    image: wiremock/wiremock:latest
    command: --port 8090
    ports:
      - "8090:8090"
    volumes:
      - ./src/testFixtures/resources/wiremock/mappings/event/stubs:/./home/wiremock/mappings/
      - ./src/testFixtures/resources/wiremock/mappings/event/response:/./home/wiremock/__files/
    networks:
      - meplatform-network
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - meplatform
    ports:
      - "8080:8080"
    networks:
      - meplatform-network
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - meplatform-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092"
    links:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_LOG_RETENTION_MS: 20000
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 2000
      KAFKA_MIN_INSYNC_REPLICAS: '1'
    networks:
      - meplatform-network

  meplatform:
    image: meplatform:latest
    # build: .
    expose:
      - "8000:8000"
    depends_on:
      - database
      - wiremock
    networks:
      - meplatform-network
networks:
  meplatform-network: {}